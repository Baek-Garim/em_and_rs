<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.project.emrs.dao.ReservationDAO">

	<select id="chkReserveState" resultType="int">
		<![CDATA[
			select count(*) from reservation
	    		where tool_code = #{tool_code}
		    	and TO_CHAR(reserve_date, 'yyyy-MM-dd HH24MISS') < #{reserve_date}			 
		]]>
	</select>

	<select id="duplicateCheck" resultType="int">
		SELECT count(*)
	    from reservation
	    where user_id = #{user_id}
	    	and tool_code = #{tool_code}
	        and reserve_state != '대여완료'
	</select>

	<select id="countMyTotalReservation" resultType="int">
	 		select count(*) from reservation
    		where user_id = #{user_id}
	    	and reserve_state != '대여완료'
	</select>

	<select id="countMyReservation" resultType="int">

  		<![CDATA[
	   		SELECT NVL(rc.totalReservationNum, 0) AS totalReservationNum
			FROM TOOL t
				JOIN (SELECT tool_code, SUM(total_count) AS totalReservationNum
		    				FROM (SELECT tool_code, COUNT(*) AS total_count
		        				FROM RENTAL
		        				WHERE rental_state NOT IN ('반납완료', '연체반납')
		        				GROUP BY tool_code
		
		        			UNION ALL
		
		        			SELECT tool_code, COUNT(*) AS total_count
		        				FROM RESERVATION
		        				WHERE reserve_state NOT IN ('대여완료', '예약취소')
		        					
		        					AND TO_CHAR(reserve_date, 'yyyy-MM-dd HH24MISS') < #{reserve_date}
		        				GROUP BY tool_code)
		        			combined
		    	GROUP BY tool_code) rc 
		    ON t.TOOL_CODE = rc.tool_code
			WHERE t.visibility = 'Y' And t.tool_code = #{tool_code} 
		]]>	   
	    	
	</select>



	<select id="findById" resultType="ReservationDTO">
		select *
			from reservation
	    	where reserve_id = #{reserve_id}
	</select>

	<select id="getUserAllReservation" resultType="ReservationDTO">
		select rsv.*, t.tool_name 
			from reservation rsv, tool t
	    	where rsv.tool_code = t.tool_code
	    		and user_id = #{user_id}
        		and reserve_state != '대여완료'
	</select>


	<!-- 어드민에서 현재 대여 가능인 예약 목록 불러올 때 사용 -->
	<select id="getActivateReserveList" resultType="ReservationDTO">
		select rsv.*, u.user_name, u.email, u.phone
			from reservation rsv, user_tb u
	    	where rsv.user_id = u.user_id
        		and reserve_state = '대여가능'
	</select>
	
	<!-- 해당 장비의 가장 첫번째 예약 가져오기 -->
	<select id="getFirstReservation" resultType="ReservationDTO">
		SELECT * FROM
		    (SELECT * FROM reservation 
		        where tool_code = #{tool_code}
		            and reserve_state = '대기중' 
		        ORDER BY reserve_date)
		    WHERE ROWNUM= 1
	</select>


	<!-- INSERT  -->
	
	<insert id="insertReserve">
		<if test="deadline_date != null">
			INSERT INTO RESERVATION(reserve_id, tool_code,  user_id, reserve_date, deadline_date, reserve_state)
			VALUES (RESERVATION_SEQ.NEXTVAL, #{tool_code}, #{user_id}, #{reserve_date}, #{deadline_date}, #{reserve_state})		
		</if>
		
		<if test="deadline_date == null">
			INSERT INTO RESERVATION(reserve_id, tool_code,  user_id, reserve_date, reserve_state)
			VALUES (RESERVATION_SEQ.NEXTVAL, #{tool_code}, #{user_id}, #{reserve_date}, #{reserve_state})		
		</if>
	</insert>
	
	<select id="reservationList" resultType="ReservationDTO" parameterType="Integer">
		select rsv.*, t.tool_name, tool_image
		from reservation rsv, tool t
	    where rsv.tool_code = t.tool_code
	    	and USER_ID = #{user_id}
	</select>
	
	<!-- UPDATE  -->
	<update id="completeReservation">
		update reservation
			set reserve_state = '대여완료'
			where reserve_id = #{reserve_id}
	</update>
	
	<!-- 대여가능, 데드라인 변경  -->
	<update id="updateActivateReservation">
		update reservation
			set reserve_state = #{reserve_state},
				deadline_date = #{deadline_date}			
			where reserve_id = #{reserve_id}
	</update>

	
</mapper>